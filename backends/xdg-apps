#!/usr/bin/env python


# This parses .desktop files used by the XDG spec.
# NOTE: It does it *very* crudely, and consequently can't
# handle one file containing multiple definitions.
# e.g. /usr/share/applications/chromium-browser.desktop.


import os


def scan(location):
    print "# Files in %s" % location
    filenames = os.listdir(location)
    for filename in filenames:
        filepath = os.path.join(location, filename)
        if os.path.isdir(filepath):
            scan(filepath)
        elif filename.endswith(".desktop"):
            use_desktop_file(filepath)
        else:
            pass


def use_desktop_file(filepath):
    fileobj = open(filepath)
    properties = {}
    for line in fileobj.readlines():
        key, equals, value = line.strip().partition("=")
        if equals != "=":
            continue
        properties[key] = value
    fileobj.close()
    print " ".join((
        "addchoice",
        "--id='%s'" % filepath,
        "--title='%s'" % properties['Name'],
        "--cmd='%s'" % subst_cleanse(properties['Exec']),
    ))


def subst_cleanse(command):
    inchars, outchars = iter(command), []
    for char in inchars:
        if char == '%':
            if next(inchars) == "%":
                outchars.append("%")
        else:
            outchars.append(char)
    return "".join(outchars)




def test_chars():
    print "Testing"
    assert subst_cleanse("foo bar baz") == "foo bar baz"
    assert subst_cleanse("foo %U baz") == "foo  baz"


def main():
    locations = [
        "/var/lib/menu-xdg/applications/menu-xdg",
        "/usr/share/applications/",
        os.environ['HOME'] + "/.local/share/applications",
    ]
    for location in locations:
        if os.path.isdir(location):
            scan(location)


if __name__ == '__main__':
    main()
    #test_chars()


