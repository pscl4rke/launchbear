#!/usr/bin/env python2


import os
import subprocess
import sys


class Wizard:

    def __init__(self):
        HOME = os.environ['HOME']
        self.config_dir = os.path.join(HOME, '.launchbear')
        self.backend_dir = os.path.join(HOME, '.launchbear', 'backends')

    def print_welcome(self):
        print
        print "This script will take the user through setting"
        print "up their personal preferences for launchbear."
        print

    def create_config_dirs(self):
        if os.path.isdir(self.config_dir):
            print "%s already exists" % self.config_dir
        else:
            os.mkdir(self.config_dir)
            print "created %s" % self.config_dir
        if os.path.isdir(self.backend_dir):
            print "%s already exists" % self.backend_dir
        else:
            os.mkdir(self.backend_dir)
            print "created %s" % self.backend_dir

    def offer_to_symlink_backends_from(self, backend_src):
        for backend_name in os.listdir(backend_src):
            src = os.path.join(backend_src, backend_name)
            dest = os.path.join(self.backend_dir, backend_name)
            answer = ''
            while answer not in ('y', 'n'):
                print
                print "Do you want to install %s?" % backend_name
                prt = "[y]es, [n]o or [v]iew in your pager... "
                answer = raw_input(prt).lower()[:1]
                if answer == 'v':
                    PAGER = os.environ.get('PAGER', 'less')
                    subprocess.call([PAGER, src])
            if answer == 'y':
                os.symlink(src, dest)
                print "Created", dest

    def wipe_the_cache(self):
        print
        cache_file = os.path.join(self.config_dir, 'cache.pkl')
        if os.path.exists(cache_file):
            os.remove(cache_file)
            print "Removed cache file", cache_file
        else:
            print "There is no cache file"
        print

    def main(self):
        self.print_welcome()
        self.create_config_dirs()
        if len(sys.argv) == 2:
            backend_src = os.path.realpath(sys.argv[1])
        else:
            backend_src = "/usr/share/launchbear/backends"
        self.offer_to_symlink_backends_from(backend_src)
        self.wipe_the_cache()


if __name__ == '__main__':
    Wizard().main()
